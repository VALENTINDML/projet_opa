version: "3.2"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092-9094:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 54.154.204.98
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafkaui:
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"

  producer: 
    build: 
      context: ./projet_opa
      dockerfile: dockerFile
      depends_on :
        - kafka
        - postgre
        
  consumer: 
    build: 
      context: ./projet_opa
      dockerfile: dockerFile
      depends_on :
        - kafka
        - postgre 


  postgre:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: VALDML
      POSTGRES_PASSWORD: 12+14=32+89cestfaux!!
      POSTGRES_DB: binance_data
    ports:
      - "5433:5432"
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: VALENTIN.DORMEUIL.PRO@GMAIL.COM
      PGADMIN_DEFAULT_PASSWORD: PROJETOPA
    ports:
      - "5050:80"

  jupyter:
    build:
      context: ./projet_opa
      dockerfile: dockerFile
    ports:
      - "8888:8888" 
    depends_on:
      - kafka
      - postgre
    command: ["sh", "-c", "jupyter notebook --ip=0.0.0.0 --port=8888 --allow-root --no-browser"]

  fastapi:
    build:
      context: ./projet_opa
      dockerfile: dockerfile
      ports:
        - "8000:8000"
    depends_on:
      - kafka
      - postgre